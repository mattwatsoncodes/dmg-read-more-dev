name: Sync and Build Plugin

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # ---------------------------------------------------------------------------
      # Step 1: Check out the source repository (dmg-read-more-dev) from its main branch.
      # (We no longer update and push back to the dev repository.)
      # ---------------------------------------------------------------------------
      - name: Checkout dev repository
        uses: actions/checkout@v2
        with:
          repository: mattwatsoncodes/dmg-read-more-dev
          fetch-depth: 0
          ref: main

      # ---------------------------------------------------------------------------
      # Step 2: Set up Node.js and PHP.
      # ---------------------------------------------------------------------------
      - name: Set up Node.js and PHP
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      # ---------------------------------------------------------------------------
      # Step 3: (Optional) Update version information or perform any needed file modifications.
      # For this approach, we assume that the dev repository’s main branch is ready as-is.
      # ---------------------------------------------------------------------------
      
      # ---------------------------------------------------------------------------
      # Step 4: Build assets in the dev repository.
      # ---------------------------------------------------------------------------
      - name: Install dependencies and build assets in dev repo
        run: |
          composer install --no-dev || { echo "Composer install failed"; exit 1; }
          npm install || { echo "npm install failed"; exit 1; }
          npm run build || { echo "npm run build failed"; exit 1; }
          if [ ! -d "build" ]; then
            echo "Error: Build folder does not exist!"
            exit 1
          fi
          echo "Build completed in dev repository."

      # ---------------------------------------------------------------------------
      # Step 5: Clone the target repository (dmg-read-more) into a subdirectory.
      # ---------------------------------------------------------------------------
      - name: Clone target repository
        run: |
          git clone https://x-access-token:${{ secrets.RELEASE_REPO_TOKEN }}@github.com/mattwatsoncodes/dmg-read-more.git target_repo

      # ---------------------------------------------------------------------------
      # Step 6: Create a new branch in the target repository.
      # ---------------------------------------------------------------------------
      - name: Create update branch in target repository
        run: |
          cd target_repo
          DEFAULT_BRANCH=$(git remote show origin | awk '/HEAD branch/ {print $NF}')
          DEFAULT_BRANCH=${DEFAULT_BRANCH:-"main"}
          echo "Detected default branch: $DEFAULT_BRANCH"
          git checkout -b update-from-dev origin/$DEFAULT_BRANCH || git checkout -b update-from-dev

      # ---------------------------------------------------------------------------
      # Step 7: Copy all files from the dev repository into the target repository.
      # We use rsync to copy everything except the .git folder.
      # ---------------------------------------------------------------------------
      - name: Copy files from dev repo to target repository
        run: |
          # From the workspace root (the dev repository checkout), copy all files into target_repo.
          # Exclude the .git folder so as not to override target_repo's git history.
          rsync -av --exclude='.git' ./ target_repo/

      # ---------------------------------------------------------------------------
      # Step 8: Remove unwanted files from the target repository.
      # Adjust the list of files/folders as needed.
      # ---------------------------------------------------------------------------
      - name: Remove unwanted files in target repository
        run: |
          cd target_repo
          rm -rf .girhub stubs .editorconfig .eslintrc.js .gitignore .stylelint.json composer.json composer.lock package-lock.json package.json phpcs.xml.dist phpstan.neon webpack.config.js
          echo "Unwanted files removed."

      # ---------------------------------------------------------------------------
      # Step 9: (Optional) Install dependencies and build assets in target repository.
      # If you prefer to build the assets again on the target repo, do so here.
      # ---------------------------------------------------------------------------
      - name: Install dependencies and build assets in target repository
        run: |
          cd target_repo
          composer install --no-dev || { echo "Composer install failed in target repo"; exit 1; }
          npm install || { echo "npm install failed in target repo"; exit 1; }
          npm run build || { echo "npm run build failed in target repo"; exit 1; }
          if [ ! -d "build" ]; then
            echo "Error: Build folder does not exist in target repo!"
            exit 1
          fi
          echo "Assets built in target repository."

      # ---------------------------------------------------------------------------
      # Step 10: Commit the changes in the target repository and push the new branch.
      # ---------------------------------------------------------------------------
      - name: Commit and push changes to target repository
        run: |
          cd target_repo
          git config user.email "matt@mattwatson.codes"
          git config user.name "Matt Watson"
          git add .
          git commit -m "Sync from dmg-read-more-dev main with build assets (release)"
          git push origin update-from-dev

      # ---------------------------------------------------------------------------
      # Step 11: Create a pull request in the target repository for review and merge.
      # ---------------------------------------------------------------------------
      - name: Create PR in target repository
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.RELEASE_REPO_TOKEN }}
          repository: mattwatsoncodes/dmg-read-more
          title: "Sync from dmg-read-more-dev main"
          body: "This PR copies everything from dmg-read-more-dev main, removes unwanted files, and builds assets."
          branch: update-from-dev

      # ---------------------------------------------------------------------------
      # Step 12: Output a success message.
      # ---------------------------------------------------------------------------
      - name: Complete release process
        run: |
          echo "✅ Sync and build process completed successfully. A pull request has been created in dmg-read-more."
